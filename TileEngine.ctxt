#BlueJ class context
comment0.target=TileEngine
comment0.text=\r\n\r\n\ @author\ R.\ Springer\r\n
comment1.params=world\ tileWidth\ tileHeight
comment1.target=TileEngine(greenfoot.World,\ int,\ int)
comment1.text=\r\n\ Constuctor\ of\ the\ TileEngine\r\n\r\n\ @param\ world\ A\ World\ class\ or\ a\ extend\ of\ it.\r\n\ @param\ tileWidth\ The\ width\ of\ the\ tile\ used\ in\ the\ TileFactory\ and\r\n\ calculations\r\n\ @param\ tileHeight\ The\ heigth\ of\ the\ tile\ used\ in\ the\ TileFactory\ and\r\n\ calculations\r\n
comment10.params=colom\ row
comment10.target=boolean\ removeTileAt(int,\ int)
comment10.text=\r\n\ Removes\ tile\ at\ the\ given\ colom\ and\ row\r\n\r\n\ @param\ colom\r\n\ @param\ row\r\n\ @return\ true\ if\ the\ tile\ has\ successfully\ been\ removed\r\n
comment11.params=x\ y
comment11.target=boolean\ removeTileAtXY(int,\ int)
comment11.text=\r\n\ Removes\ tile\ at\ the\ given\ x\ and\ y\ position\r\n\r\n\ @param\ x\ X-position\ in\ the\ world\r\n\ @param\ y\ Y-position\ in\ the\ world\r\n\ @return\ true\ if\ the\ tile\ has\ successfully\ been\ removed\r\n
comment12.params=tile
comment12.target=boolean\ removeTile(Tile)
comment12.text=\r\n\ Removes\ the\ tile\ based\ on\ a\ tile\r\n\r\n\ @param\ tile\ Tile\ from\ the\ tilemap\r\n\ @return\ true\ if\ the\ tile\ has\ successfully\ been\ removed\r\n
comment13.params=x\ y
comment13.target=boolean\ checkTileSolid(int,\ int)
comment13.text=\r\n\ This\ methode\ checks\ if\ a\ tile\ on\ a\ x\ and\ y\ position\ in\ the\ world\ is\ solid\r\n\ or\ not.\r\n\r\n\ @param\ x\ X-position\ in\ the\ world\r\n\ @param\ y\ Y-position\ in\ the\ world\r\n\ @return\ Tile\ at\ location\ is\ solid\r\n
comment14.params=x
comment14.target=int\ getColumn(int)
comment14.text=\r\n\ This\ methode\ returns\ a\ colom\ based\ on\ a\ x\ position.\r\n\r\n\ @param\ x\r\n\ @return\ the\ colom\r\n
comment15.params=y
comment15.target=int\ getRow(int)
comment15.text=\r\n\ This\ methode\ returns\ a\ row\ based\ on\ a\ y\ position.\r\n\r\n\ @param\ y\r\n\ @return\ the\ row\r\n
comment16.params=col
comment16.target=int\ getX(int)
comment16.text=\r\n\ This\ methode\ returns\ a\ x\ position\ based\ on\ the\ colom\r\n\r\n\ @param\ col\r\n\ @return\ The\ x\ position\r\n
comment17.params=row
comment17.target=int\ getY(int)
comment17.text=\r\n\ This\ methode\ returns\ a\ y\ position\ based\ on\ the\ row\r\n\r\n\ @param\ row\r\n\ @return\ The\ y\ position\r\n
comment2.params=world\ tileWidth\ tileHeight\ map
comment2.target=TileEngine(greenfoot.World,\ int,\ int,\ int[][])
comment2.text=\r\n\ Constuctor\ of\ the\ TileEngine\r\n\r\n\ @param\ world\ A\ World\ class\ or\ a\ extend\ of\ it.\r\n\ @param\ tileWidth\ The\ width\ of\ the\ tile\ used\ in\ the\ TileFactory\ and\r\n\ calculations\r\n\ @param\ tileHeight\ The\ heigth\ of\ the\ tile\ used\ in\ the\ TileFactory\ and\r\n\ calculations\r\n\ @param\ map\ A\ tilemap\ with\ numbers\r\n
comment3.params=map
comment3.target=void\ setMap(int[][])
comment3.text=\r\n\ The\ setMap\ method\ used\ to\ set\ a\ map.\ This\ method\ also\ clears\ the\ previous\r\n\ map\ and\ generates\ a\ new\ one.\r\n\r\n\ @param\ map\r\n
comment4.params=tf
comment4.target=void\ setTileFactory(TileFactory)
comment4.text=\r\n\ The\ setTileFactory\ sets\ a\ tilefactory.\ You\ can\ use\ this\ if\ you\ want\ to\r\n\ create\ you\ own\ tilefacory\ and\ use\ it\ in\ the\ class.\r\n\r\n\ @param\ tf\ A\ Tilefactory\ or\ extend\ of\ it.\r\n
comment5.params=
comment5.target=void\ clearTilesWorld()
comment5.text=\r\n\ Removes\ al\ the\ tiles\ from\ the\ world.\r\n
comment6.params=
comment6.target=void\ generateWorld()
comment6.text=\r\n\ Creates\ the\ tile\ world\ based\ on\ the\ TileFactory\ and\ the\ map\ icons.\r\n
comment7.params=tile\ colom\ row
comment7.target=void\ addTileAt(Tile,\ int,\ int)
comment7.text=\r\n\ Adds\ a\ tile\ on\ the\ colom\ and\ row.\ Calculation\ is\ based\ on\ TILE_WIDTH\ and\r\n\ TILE_HEIGHT\r\n\r\n\ @param\ tile\ The\ Tile\r\n\ @param\ colom\ The\ colom\ where\ the\ tile\ exist\ in\ the\ map\r\n\ @param\ row\ The\ row\ where\ the\ tile\ exist\ in\ the\ map\r\n
comment8.params=colom\ row
comment8.target=Tile\ getTileAt(int,\ int)
comment8.text=\r\n\ Retrieves\ a\ tile\ at\ the\ location\ based\ on\ colom\ and\ row\ in\ the\ map\r\n\r\n\ @param\ colom\r\n\ @param\ row\r\n\ @return\ The\ tile\ at\ the\ location\ colom\ and\ row.\ Returns\ null\ if\ it\ cannot\r\n\ find\ a\ tile.\r\n
comment9.params=x\ y
comment9.target=Tile\ getTileAtXY(int,\ int)
comment9.text=\r\n\ Retrieves\ a\ tile\ based\ on\ a\ x\ and\ y\ position\ in\ the\ world\r\n\r\n\ @param\ x\ X-position\ in\ the\ world\r\n\ @param\ y\ Y-position\ in\ the\ world\r\n\ @return\ The\ tile\ at\ the\ location\ colom\ and\ row.\ Returns\ null\ if\ it\ cannot\r\n\ find\ a\ tile.\r\n
numComments=18
